[{"/home/meisam/React/react-take-home-test/src/reportWebVitals.js":"1","/home/meisam/React/react-take-home-test/src/Components/Ballot/Ballot.jsx":"2","/home/meisam/React/react-take-home-test/src/App.js":"3","/home/meisam/React/react-take-home-test/src/Components/CategoryHeader/CategoryHeader.jsx":"4","/home/meisam/React/react-take-home-test/src/Components/NomineeCard/NomineeCard.jsx":"5","/home/meisam/React/react-take-home-test/src/Components/SuccessModal/SuccessModal.jsx":"6"},{"size":362,"mtime":1645013026894,"results":"7","hashOfConfig":"8"},{"size":3100,"mtime":1645050857286,"results":"9","hashOfConfig":"8"},{"size":268,"mtime":1645050803791,"results":"10","hashOfConfig":"8"},{"size":234,"mtime":1645050866850,"results":"11","hashOfConfig":"8"},{"size":718,"mtime":1645050880806,"results":"12","hashOfConfig":"8"},{"size":653,"mtime":1645050890250,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rsfrfx",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/meisam/React/react-take-home-test/src/reportWebVitals.js",[],"/home/meisam/React/react-take-home-test/src/Components/Ballot/Ballot.jsx",["27"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CategoryHeader from \"../CategoryHeader/CategoryHeader\";\nimport NomineeCard from \"../NomineeCard/NomineeCard\";\nimport classes from \"./Ballot.module.css\";\nimport SuccessModal from \"../SuccessModal/SuccessModal\";\n\nconst Ballot = () => {\n  const [nominees, setNominees] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedNominees, setSelectedNominees] = useState([]);\n\n  useEffect(() => {\n    let newSelected = [];\n    axios\n      .get(\"/api/getBallotData\")\n      .then((res) => {\n        setNominees(res.data.items);\n        res.data.items.map((item, index) => {\n          return newSelected.push({ categoryId: item.id, nominee: {} });\n        });\n        setSelectedNominees(newSelected);\n      })\n      .catch(() => {\n        console.error(\"Server not respond\");\n      });\n  }, []);\n\n  const onSubmitClick = useCallback(() => {\n    setModalOpen(true);\n  }, [setModalOpen]);\n\n  const onModalCloseClick = useCallback(() => {\n    setModalOpen(false);\n  }, [setModalOpen]);\n\n  const onNomineeClick = useCallback(\n    (categoryId, nomineeItem) => {\n      let newSelected = [...selectedNominees];\n      const ctegoryIndex = newSelected.findIndex(\n        (item) => item.categoryId === categoryId\n      );\n\n      newSelected[ctegoryIndex] = {\n        categoryId: categoryId,\n        nominee: nomineeItem,\n      };\n\n      setSelectedNominees(newSelected);\n    },\n    [selectedNominees, setSelectedNominees]\n  );\n\n  const selectedCardFunc = useCallback(\n    (categoryId, nominee) => {\n      let selected = false;\n      selectedNominees.map((item, index) => {\n        if (item.categoryId === categoryId && item.nominee === nominee) {\n          return (selected = true);\n        }\n      });\n      return selected;\n    },\n    [selectedNominees]\n  );\n\n  return (\n    <div className=\"ballot\">\n      {nominees.map((categoryItem, categoryIndex) => {\n        return (\n          <div key={categoryIndex} className={classes.category}>\n            <CategoryHeader title={categoryItem.title} />\n            <div className={classes.nomineesWrapper}>\n              {categoryItem.items.map((nomineeItem, nomineeIndex) => {\n                return (\n                  <NomineeCard\n                    nomineeItem={nomineeItem}\n                    key={nomineeIndex}\n                    onNomineeClick={() =>\n                      onNomineeClick(categoryItem.id, nomineeItem)\n                    }\n                    selected={selectedCardFunc(categoryItem.id, nomineeItem)}\n                    id={`${categoryIndex}-${nomineeIndex}`}\n                  />\n                );\n              })}\n            </div>\n          </div>\n        );\n      })}\n      <div className={classes.buttonWrapper}>\n        <div\n          className={classes.submitButton}\n          onClick={() => onSubmitClick()}\n          id={\"submitButton\"}\n        >\n          Submit\n        </div>\n      </div>\n      {modalOpen && <SuccessModal onCloseClick={onModalCloseClick} />}\n    </div>\n  );\n};\n\nexport default Ballot;\n","/home/meisam/React/react-take-home-test/src/App.js",[],"/home/meisam/React/react-take-home-test/src/Components/CategoryHeader/CategoryHeader.jsx",[],"/home/meisam/React/react-take-home-test/src/Components/NomineeCard/NomineeCard.jsx",[],"/home/meisam/React/react-take-home-test/src/Components/SuccessModal/SuccessModal.jsx",[],{"ruleId":"28","severity":1,"message":"29","line":57,"column":42,"nodeType":"30","messageId":"31","endLine":57,"endColumn":44},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]